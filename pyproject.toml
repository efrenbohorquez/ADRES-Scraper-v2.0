[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "web-scraping-adres-taller"
version = "1.0.0"
description = "Taller de Big Data: Web Scraping Ã‰tico para documentos de ADRES"
authors = [
    {name = "Taller Big Data 2024", email = "bigdata.taller@ejemplo.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Topic :: Education",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content", 
    "Topic :: Scientific/Engineering :: Information Analysis",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = [
    "web-scraping", 
    "big-data", 
    "adres", 
    "etico", 
    "educacional", 
    "taller"
]
dependencies = [
    "requests>=2.31.0",
    "beautifulsoup4>=4.12.2", 
    "lxml>=4.9.3",
    "pandas>=2.0.3",
    "numpy>=1.24.3",
    "jsonschema>=4.17.3",
    "python-dateutil>=2.8.2"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0", 
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.1"
]
analysis = [
    "matplotlib>=3.7.2",
    "seaborn>=0.12.2", 
    "wordcloud>=1.9.2",
    "nltk>=3.8.1"
]

[project.scripts]
scraper-adres = "web_scraper_adres:main"

[project.urls]
Homepage = "https://github.com/ejemplo/web-scraping-adres-taller"
Documentation = "https://github.com/ejemplo/web-scraping-adres-taller/wiki"
Repository = "https://github.com/ejemplo/web-scraping-adres-taller.git"
Issues = "https://github.com/ejemplo/web-scraping-adres-taller/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --cov=src --cov-report=html --cov-report=term-missing"